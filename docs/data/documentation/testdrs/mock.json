{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mock","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7TestDRS3SpyP","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/Spy","kind":"typeIdentifier","text":"Spy"},{"kind":"text","text":", "},{"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/StubProviding","text":"StubProviding","preciseIdentifier":"s:7TestDRS13StubProvidingP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Mock"},{"text":" protocol combines the capabilities of ","type":"text"},{"type":"codeVoice","code":"StubProviding"},{"type":"text","text":", "},{"type":"codeVoice","code":"Spy"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"StaticTestable"},{"type":"text","text":" protocols"},{"text":" ","type":"text"},{"type":"text","text":"to create a versatile test double that can:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Stub method and property implementations to return predetermined values ("},{"type":"codeVoice","code":"StubProviding"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Record and verify method invocations, including parameters and call counts (","type":"text"},{"code":"Spy","type":"codeVoice"},{"type":"text","text":")"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support testing of static members in a thread-safe manner ("},{"type":"codeVoice","code":"StaticTestable"},{"type":"text","text":")"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Mock objects created with this protocol are suitable for both state-based and interaction-based testing approaches."},{"type":"text","text":" "},{"type":"text","text":"They allow you to verify both the behavior of the code under test (by examining calls made to the mock)"},{"type":"text","text":" "},{"text":"and its outputs (by controlling what the mock returns).","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mock implementations are typically generated automatically using the "},{"type":"codeVoice","code":"@AddMock"},{"type":"text","text":" macro, which creates"},{"type":"text","text":" "},{"type":"text","text":"a concrete class that implements this protocol for a given type (protocol, class, or struct)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage:"}]},{"type":"codeListing","syntax":"swift","code":["@AddMock","protocol Calculator {","    func add(_ a: Int, _ b: Int) -> Int","}","","func testCalculatorUsage() {","    let mockCalculator = MockCalculator()","","    \/\/ Always return 42 from the add method, no matter the input","    #stub(mockCalculator.add, returning: 42)","    ","    \/\/ Use the mock in your code under test","    let result = systemUnderTest.performCalculation(using: mockCalculator)","    ","    \/\/ Verify the mock was called correctly","    #expectWasCalled(mockCalculator.add, with: 10, 20)","    XCTAssertEqual(result, 42)","}"]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/TestDRS\/documentation\/TestDRS\/Spy","doc:\/\/TestDRS\/documentation\/TestDRS\/StaticTestable","doc:\/\/TestDRS\/documentation\/TestDRS\/StubProviding"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/testdrs\/mock"]}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mock","kind":"identifier"}],"modules":[{"name":"TestDRS"}],"symbolKind":"protocol","roleHeading":"Protocol","role":"symbol","title":"Mock","navigatorTitle":[{"text":"Mock","kind":"identifier"}],"externalID":"s:7TestDRS4MockP"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/TestDRS\/documentation\/TestDRS"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/TestDRS\/documentation\/TestDRS\/Mock","interfaceLanguage":"swift"},"abstract":[{"text":"A protocol that combines stubbing and spying functionality for comprehensive test doubles.","type":"text"}],"references":{"doc://TestDRS/documentation/TestDRS":{"title":"TestDRS","type":"topic","role":"collection","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS","url":"\/documentation\/testdrs","kind":"symbol","abstract":[{"type":"text","text":"A modern Swift testing library that provides powerful mocking, stubbing, and verification capabilities through Swift macros."}]},"doc://TestDRS/documentation/TestDRS/StaticTestable":{"abstract":[{"type":"text","text":"A type whose static members can be tested using a "},{"type":"codeVoice","code":"StaticTestingContext"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","url":"\/documentation\/testdrs\/statictestable","title":"StaticTestable","navigatorTitle":[{"kind":"identifier","text":"StaticTestable"}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/StaticTestable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StaticTestable"}],"type":"topic"},"doc://TestDRS/documentation/TestDRS/Mock":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mock"}],"role":"symbol","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/Mock","type":"topic","url":"\/documentation\/testdrs\/mock","kind":"symbol","abstract":[{"type":"text","text":"A protocol that combines stubbing and spying functionality for comprehensive test doubles."}],"navigatorTitle":[{"text":"Mock","kind":"identifier"}],"title":"Mock"},"doc://TestDRS/documentation/TestDRS/StubProviding":{"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/StubProviding","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"StubProviding","kind":"identifier"}],"kind":"symbol","title":"StubProviding","type":"topic","abstract":[{"code":"StubProviding","type":"codeVoice"},{"text":" is a protocol that defines a stubbing mechanism for unit testing.","type":"text"},{"type":"text","text":" "},{"text":"It allows you to replace real method calls with stubbed responses, making it easier to test your code in isolation.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each stub is associated with the functionâ€™s signature, input type, and output type."},{"type":"text","text":" "},{"text":"This information is used to retrieve the stub when the function is called.","type":"text"}],"url":"\/documentation\/testdrs\/stubproviding","navigatorTitle":[{"kind":"identifier","text":"StubProviding"}]},"doc://TestDRS/documentation/TestDRS/Spy":{"abstract":[{"type":"text","text":"A protocol that enables observing and verifying function calls during testing."}],"role":"symbol","url":"\/documentation\/testdrs\/spy","title":"Spy","kind":"symbol","navigatorTitle":[{"text":"Spy","kind":"identifier"}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/Spy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Spy"}],"type":"topic"}}}