{"abstract":[{"type":"text","text":"Records a static function call along with its details for later verification."}],"hierarchy":{"paths":[["doc:\/\/TestDRS\/documentation\/TestDRS","doc:\/\/TestDRS\/documentation\/TestDRS\/Spy"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"recordCall","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":" = (), "},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"time"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":" = Date(), ","kind":"text"},{"text":"returning","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"outputType"},{"kind":"text","text":": "},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":".Type = Void.self, "},{"kind":"externalParam","text":"signature"},{"text":": ","kind":"text"},{"text":"FunctionSignature","kind":"typeIdentifier","preciseIdentifier":"s:7TestDRS17FunctionSignatureV","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/FunctionSignature"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"input","content":[{"type":"paragraph","inlineContent":[{"text":"The parameter(s) passed to the static function. For functions with multiple parameters,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"use a tuple containing all parameters in the order they appear in the function signature."},{"type":"text","text":" "},{"type":"text","text":"For functions without parameters, this defaults to "},{"type":"codeVoice","code":"Void()"},{"type":"text","text":"."}]}]},{"name":"time","content":[{"type":"paragraph","inlineContent":[{"text":"The time when the function was called. Defaults to the current time.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The return type of the function. For void functions, this defaults to "},{"type":"codeVoice","code":"Void.self"},{"type":"text","text":"."}]}],"name":"outputType"},{"name":"signature","content":[{"inlineContent":[{"text":"The signature of the function that was called. ","type":"text"},{"inlineContent":[{"text":"Do not pass in this argument","type":"text"}],"type":"strong"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"it will automatically capture the signature of the calling function using "},{"type":"codeVoice","code":"#function"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method is the static counterpart to  the","type":"text"},{"type":"codeVoice","code":"recordCall"},{"type":"text","text":" instance method and is used"},{"type":"text","text":" "},{"type":"text","text":"to record calls to static methods. It works similarly to the instance method version, but is designed"},{"type":"text","text":" "},{"type":"text","text":"for static context."}]},{"inlineContent":[{"type":"text","text":"When static method mocks are generated using a macro like "},{"type":"codeVoice","code":"@AddMock"},{"type":"text","text":" or "},{"code":"@Mock","type":"codeVoice"},{"type":"text","text":", calls to this method are automatically"},{"text":" ","type":"text"},{"text":"inserted into the mock implementations of static functions.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"To test static methods, youâ€™ll need to use the ","type":"text"},{"code":"withStaticTestingContext","type":"codeVoice"},{"text":" function to create","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a testing context that isolates the static state between tests."}]}],"type":"aside","name":"Note","style":"note"},{"inlineContent":[{"text":"Example usage within a static mock implementation:","type":"text"}],"type":"paragraph"},{"code":["static func fetchDefaultUser() async throws -> User {","    recordCall()","    return try await throwingStubOutput()","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/TestDRS\/documentation\/TestDRS\/Spy\/recordCall(with:at:returning:signature:)-swift.type.method","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/testdrs\/spy\/recordcall(with:at:returning:signature:)-swift.type.method"]}],"metadata":{"roleHeading":"Type Method","title":"recordCall(with:at:returning:signature:)","role":"symbol","symbolKind":"method","externalID":"s:7TestDRS3SpyPAAE10recordCall4with2at9returning9signatureyqd___10Foundation4DateVqd_0_mAA17FunctionSignatureVtr0_lFZ","extendedModule":"TestDRS","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"recordCall","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Input"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"returning"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"text":".Type, ","kind":"text"},{"text":"signature","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7TestDRS17FunctionSignatureV","text":"FunctionSignature","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"name":"TestDRS"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://TestDRS/documentation/TestDRS":{"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS","abstract":[{"text":"A modern Swift testing library that provides powerful mocking, stubbing, and verification capabilities through Swift macros.","type":"text"}],"kind":"symbol","url":"\/documentation\/testdrs","type":"topic","role":"collection","title":"TestDRS"},"doc://TestDRS/documentation/TestDRS/Spy/recordCall(with:at:returning:signature:)-swift.type.method":{"url":"\/documentation\/testdrs\/spy\/recordcall(with:at:returning:signature:)-swift.type.method","title":"recordCall(with:at:returning:signature:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Records a static function call along with its details for later verification.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recordCall"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"at"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":", "},{"text":"returning","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"signature","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7TestDRS17FunctionSignatureV","text":"FunctionSignature"},{"text":")","kind":"text"}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/Spy\/recordCall(with:at:returning:signature:)-swift.type.method"},"doc://TestDRS/documentation/TestDRS/FunctionSignature":{"navigatorTitle":[{"text":"FunctionSignature","kind":"identifier"}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/FunctionSignature","url":"\/documentation\/testdrs\/functionsignature","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FunctionSignature","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"code":"FunctionSignature","type":"codeVoice"},{"text":" is used to represent the signature of a function.","type":"text"}],"title":"FunctionSignature"},"doc://TestDRS/documentation/TestDRS/Spy":{"url":"\/documentation\/testdrs\/spy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Spy"}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/Spy","type":"topic","abstract":[{"type":"text","text":"A protocol that enables observing and verifying function calls during testing."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Spy"}],"title":"Spy","kind":"symbol"}}}