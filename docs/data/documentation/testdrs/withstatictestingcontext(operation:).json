{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"withStaticTestingContext","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"R","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The operation to run with the static testing context configured to test the given types."}],"type":"paragraph"}],"name":"operation"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"Testing static members can be challenging because they maintain their state across tests.","type":"text"},{"type":"text","text":" "},{"text":"This can lead to side effects where the outcome of one test affects another, leading to flaky tests that pass or fail unpredictably.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Using "},{"code":"withStaticTestingContext","type":"codeVoice"},{"type":"text","text":" ensures that each test starts with a clean slate and does not have a dependency on any other test."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"code":"XCTest","type":"codeVoice"},{"text":", you can wrap the contents of your test like so:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["class MyTests: XCTestCase {","","  func myTest() {","      withStaticTestingContext {","          \/\/ Test some static member","      }","  }","","}"]},{"inlineContent":[{"text":"If all of the tests in a test case will be testing static members, you can wrap ","type":"text"},{"code":"invokeTest","type":"codeVoice"},{"type":"text","text":" so that a new static testing context"},{"type":"text","text":" "},{"type":"text","text":"is created for every test method:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["class MyTests: XCTestCase {","","  override func invokeTest() {","      withStaticTestingContext {","          super.invokeTest()","      }","  }","","}"]},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"withStaticTestingContext","type":"codeVoice"},{"type":"text","text":" employs a task-local variable to maintain the current static testing context. This ensures thread-safety within the Swift Concurrency model."},{"text":" ","type":"text"},{"type":"text","text":"However, detached "},{"type":"codeVoice","code":"Task"},{"type":"text","text":"s and non-Swift Concurrency code wonâ€™t have access to this context. Consequently, static calls within these contexts cannot be tested."}]}],"style":"note"}],"kind":"content"}],"kind":"symbol","metadata":{"title":"withStaticTestingContext(operation:)","roleHeading":"Function","role":"symbol","externalID":"s:7TestDRS24withStaticTestingContext9operationxxyKXE_tKlF","symbolKind":"func","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"withStaticTestingContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"operation","kind":"externalParam"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"modules":[{"name":"TestDRS"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Creates a ","type":"text"},{"type":"codeVoice","code":"StaticTestingContext"},{"type":"text","text":" for testing the given "},{"type":"codeVoice","code":"StaticTestable"},{"text":" types during the duration of the operation.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/TestDRS\/documentation\/TestDRS"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/testdrs\/withstatictestingcontext(operation:)"]}],"identifier":{"url":"doc:\/\/TestDRS\/documentation\/TestDRS\/withStaticTestingContext(operation:)","interfaceLanguage":"swift"},"references":{"doc://TestDRS/documentation/TestDRS":{"title":"TestDRS","type":"topic","url":"\/documentation\/testdrs","abstract":[{"type":"text","text":"A modern Swift testing library that provides powerful mocking, stubbing, and verification capabilities through Swift macros."}],"kind":"symbol","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS","role":"collection"},"doc://TestDRS/documentation/TestDRS/withStaticTestingContext(operation:)":{"kind":"symbol","url":"\/documentation\/testdrs\/withstatictestingcontext(operation:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withStaticTestingContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"operation"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"abstract":[{"text":"Creates a ","type":"text"},{"type":"codeVoice","code":"StaticTestingContext"},{"text":" for testing the given ","type":"text"},{"type":"codeVoice","code":"StaticTestable"},{"type":"text","text":" types during the duration of the operation."}],"title":"withStaticTestingContext(operation:)","type":"topic","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/withStaticTestingContext(operation:)"}}}