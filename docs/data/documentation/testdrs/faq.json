{"kind":"article","metadata":{"modules":[{"name":"TestDRS"}],"roleHeading":"Article","role":"article","title":"Frequently Asked Questions"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/testdrs\/faq"]}],"identifier":{"url":"doc:\/\/TestDRS\/documentation\/TestDRS\/FAQ","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/TestDRS\/documentation\/TestDRS"]]},"abstract":[{"text":"Common questions and answers about using TestDRS.","type":"text"}],"seeAlsoSections":[{"title":"Additional testing topics","anchor":"Additional-testing-topics","generated":true,"identifiers":["doc:\/\/TestDRS\/documentation\/TestDRS\/TestingStaticMembers"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"How-do-I-test-that-a-closure-was-called","level":2,"text":"How do I test that a closure was called?","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Since closures are just unnamed functions in Swift, you can create a mock type to stand in for your closure:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Step 1: Create a mock to stand in for your closure","@Mock","struct CallbackHandler {","    func onComplete(result: Result<Data, Error>)","}","","\/\/ Step 2: Use the mock in your test","func testClosureIsCalled() {","    \/\/ Arrange","    let mockCallback = CallbackHandler()","    let dataLoader = DataLoader()","    ","    \/\/ Act - pass the mock's function directly as the completion handler","    dataLoader.loadData(completion: mockCallback.onComplete)","    ","    \/\/ Assert","    #expectWasCalled(mockCallback.onComplete)","        .exactlyOnce()","}"]},{"anchor":"How-do-I-verify-the-arguments-of-non-Equatable-types","type":"heading","text":"How do I verify the arguments of non-Equatable types?","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When dealing with non-Equatable types, you can use "},{"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult\/getMatchingCall()","isActive":true,"type":"reference"},{"type":"text","text":" to access the function call and examine its input:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Access a single call","let result = #expectWasCalled(mockProcessor.processComplexData).exactlyOnce()","let call = try result.getMatchingCall()","","\/\/ Destructure the input into the individual arguments","let (id, metadata) = call.input","","\/\/ Assert on those arguments","XCTAssertEqual(id, \"expected-id\")","XCTAssertTrue(metadata.contains(\"important-flag\"))"]},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult"},{"text":" for additional methods for accessing function calls.","type":"text"}]},{"anchor":"Is-there-a-way-to-reset-mock-history-between-test-cases","type":"heading","text":"Is there a way to reset mock history between test cases?","level":2},{"inlineContent":[{"text":"TestDRS does not currently have a way to reset a mock. Generally, you should create a new mock instance for each test. If you find yourself wanting to reset a mock during a test, consider if that test should be refactored into multiple tests.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For static mocks, use "},{"type":"codeVoice","code":"withStaticTestingContext"},{"text":" to isolate test cases, as described in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/TestingStaticMembers","isActive":true},{"type":"text","text":" article."}]}]}],"references":{"doc://TestDRS/documentation/TestDRS/ExpectWasCalledResult/getMatchingCall()":{"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult\/getMatchingCall()","url":"\/documentation\/testdrs\/expectwascalledresult\/getmatchingcall()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getMatchingCall","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"FunctionCall","preciseIdentifier":"s:7TestDRS12FunctionCallV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Gets the matching call if it exists, or throws an "},{"type":"codeVoice","code":"ExpectWasCalledResultError"},{"type":"text","text":" if no calls were made that match the expectation."}],"conformance":{"constraints":[{"type":"codeVoice","code":"AmountMatching"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MatchingSingle"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"getMatchingCall()"},"doc://TestDRS/documentation/TestDRS":{"role":"collection","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS","kind":"symbol","abstract":[{"text":"A modern Swift testing library that provides powerful mocking, stubbing, and verification capabilities through Swift macros.","type":"text"}],"type":"topic","title":"TestDRS","url":"\/documentation\/testdrs"},"doc://TestDRS/documentation/TestDRS/ExpectWasCalledResult":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpectWasCalledResult"}],"url":"\/documentation\/testdrs\/expectwascalledresult","type":"topic","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult","kind":"symbol","title":"ExpectWasCalledResult","abstract":[{"type":"codeVoice","code":"ExpectWasCalledResult"},{"text":" is a struct that encapsulates the result of an ","type":"text"},{"type":"codeVoice","code":"#expectWasCalled"},{"type":"text","text":" expectation."},{"type":"text","text":" "},{"text":"It contains any calls that match the expectation and provides methods for expecting the number of times the given call was recorded.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ExpectWasCalledResult","kind":"identifier"}]},"doc://TestDRS/documentation/TestDRS/TestingStaticMembers":{"kind":"article","role":"article","abstract":[{"type":"text","text":"Learn how to test code that uses static members by creating mocks with TestDRS."}],"title":"Testing static members","type":"topic","url":"\/documentation\/testdrs\/testingstaticmembers","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/TestingStaticMembers"}}}