{"kind":"article","seeAlsoSections":[{"title":"Additional testing topics","generated":true,"identifiers":["doc:\/\/TestDRS\/documentation\/TestDRS\/TestingStaticMembers"],"anchor":"Additional-testing-topics"}],"identifier":{"url":"doc:\/\/TestDRS\/documentation\/TestDRS\/FAQ","interfaceLanguage":"swift"},"sections":[],"metadata":{"role":"article","roleHeading":"Article","title":"Frequently Asked Questions","modules":[{"name":"TestDRS"}]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"How-do-I-test-that-a-closure-was-called","level":2,"text":"How do I test that a closure was called?"},{"inlineContent":[{"type":"text","text":"Since closures are just unnamed functions in Swift, you can create a mock type to stand in for your closure:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Step 1: Create a mock to stand in for your closure","@Mock","struct CallbackHandler {","    func onComplete(result: Result<Data, Error>)","}","","\/\/ Step 2: Use the mock in your test","func testClosureIsCalled() {","    \/\/ Arrange","    let mockCallback = CallbackHandler()","    let dataLoader = DataLoader()","    ","    \/\/ Act - pass the mock's function directly as the completion handler","    dataLoader.loadData(completion: mockCallback.onComplete)","    ","    \/\/ Assert","    #expectWasCalled(mockCallback.onComplete)","        .exactlyOnce()","}"]},{"level":2,"text":"How do I verify the arguments of non-Equatable types?","anchor":"How-do-I-verify-the-arguments-of-non-Equatable-types","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When dealing with non-Equatable types, you can use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult\/getMatchingCall()"},{"text":" to access the function call and examine its input:","type":"text"}]},{"syntax":"swift","code":["\/\/ Access a single call","let result = #expectWasCalled(mockProcessor.processComplexData).exactlyOnce()","let call = try result.getMatchingCall()","","\/\/ Destructure the input into the individual arguments","let (id, metadata) = call.input","","\/\/ Assert on those arguments","XCTAssertEqual(id, \"expected-id\")","XCTAssertTrue(metadata.contains(\"important-flag\"))"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult","type":"reference"},{"type":"text","text":" for additional methods for accessing function calls."}]},{"level":2,"type":"heading","text":"Is there a way to reset mock history between test cases?","anchor":"Is-there-a-way-to-reset-mock-history-between-test-cases"},{"inlineContent":[{"type":"text","text":"TestDRS does not currently have a way to reset a mock. Generally, you should create a new mock instance for each test. If you find yourself wanting to reset a mock during a test, consider if that test should be refactored into multiple tests."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For static mocks, use "},{"code":"withStaticTestingContext","type":"codeVoice"},{"type":"text","text":" to isolate test cases, as described in the "},{"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/TestingStaticMembers","type":"reference","isActive":true},{"type":"text","text":" article."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Common questions and answers about using TestDRS.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/testdrs\/faq"]}],"hierarchy":{"paths":[["doc:\/\/TestDRS\/documentation\/TestDRS"]]},"references":{"doc://TestDRS/documentation/TestDRS":{"title":"TestDRS","type":"topic","role":"collection","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS","url":"\/documentation\/testdrs","kind":"symbol","abstract":[{"type":"text","text":"A modern Swift testing library that provides powerful mocking, stubbing, and verification capabilities through Swift macros."}]},"doc://TestDRS/documentation/TestDRS/ExpectWasCalledResult":{"abstract":[{"type":"codeVoice","code":"ExpectWasCalledResult"},{"type":"text","text":" is a struct that encapsulates the result of an "},{"type":"codeVoice","code":"#expectWasCalled"},{"text":" expectation.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It contains any calls that match the expectation and provides methods for expecting the number of times the given call was recorded."}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExpectWasCalledResult","kind":"identifier"}],"title":"ExpectWasCalledResult","type":"topic","navigatorTitle":[{"text":"ExpectWasCalledResult","kind":"identifier"}],"url":"\/documentation\/testdrs\/expectwascalledresult"},"doc://TestDRS/documentation/TestDRS/ExpectWasCalledResult/getMatchingCall()":{"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"AmountMatching","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MatchingSingle"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/testdrs\/expectwascalledresult\/getmatchingcall()","abstract":[{"text":"Gets the matching call if it exists, or throws an ","type":"text"},{"code":"ExpectWasCalledResultError","type":"codeVoice"},{"type":"text","text":" if no calls were made that match the expectation."}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult\/getMatchingCall()","kind":"symbol","title":"getMatchingCall()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getMatchingCall","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7TestDRS12FunctionCallV","kind":"typeIdentifier","text":"FunctionCall"},{"kind":"text","text":"<"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://TestDRS/documentation/TestDRS/TestingStaticMembers":{"url":"\/documentation\/testdrs\/testingstaticmembers","kind":"article","title":"Testing static members","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/TestingStaticMembers","abstract":[{"type":"text","text":"Learn how to test code that uses static members by creating mocks with TestDRS."}],"type":"topic","role":"article"}}}