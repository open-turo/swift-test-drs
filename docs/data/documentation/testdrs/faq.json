{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TestDRS\/documentation\/TestDRS\/FAQ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"title":"Additional testing topics","anchor":"Additional-testing-topics","identifiers":["doc:\/\/TestDRS\/documentation\/TestDRS\/MockingStaticMembers"],"generated":true}],"variants":[{"paths":["\/documentation\/testdrs\/faq"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"How-do-I-test-that-a-closure-was-called","type":"heading","text":"How do I test that a closure was called?"},{"inlineContent":[{"text":"Since closures are just unnamed functions in Swift, you can create a mock type to stand in for your closure:","type":"text"}],"type":"paragraph"},{"code":["\/\/ Step 1: Create a mock to stand in for your closure","@Mock","struct CallbackHandler {","    func onComplete(result: Result<Data, Error>)","}","","\/\/ Step 2: Use the mock in your test","func testClosureIsCalled() {","    \/\/ Arrange","    let mockCallback = CallbackHandler()","    let dataLoader = DataLoader()","","    \/\/ Act - pass the mock's function directly as the completion handler","    dataLoader.loadData(completion: mockCallback.onComplete)","","    \/\/ Assert","    #expectWasCalled(mockCallback.onComplete)","        .exactlyOnce()","}"],"type":"codeListing","syntax":"swift"},{"level":2,"anchor":"How-do-I-verify-the-arguments-of-non-Equatable-types","text":"How do I verify the arguments of non-Equatable types?","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When dealing with non-Equatable types, you can use "},{"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult\/getMatchingCall()","type":"reference","isActive":true},{"type":"text","text":" to access the function call and examine its input:"}]},{"syntax":"swift","code":["\/\/ Access a single call","let result = #expectWasCalled(mockProcessor.processComplexData).exactlyOnce()","let call = try result.getMatchingCall()","","\/\/ Destructure the input into the individual arguments","let (id, metadata) = call.input","","\/\/ Assert on those arguments","XCTAssertEqual(id, \"expected-id\")","XCTAssertTrue(metadata.contains(\"important-flag\"))"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult","type":"reference"},{"type":"text","text":" for additional methods for accessing function calls."}]},{"type":"heading","text":"Is there a way to reset mock history between test cases?","anchor":"Is-there-a-way-to-reset-mock-history-between-test-cases","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"TestDRS does not currently have a way to reset a mock. Generally, you should create a new mock instance for each test. If you find yourself wanting to reset a mock during a test, consider if that test should be refactored into multiple tests."}]},{"type":"paragraph","inlineContent":[{"text":"For static mocks, use ","type":"text"},{"code":"withStaticTestingContext","type":"codeVoice"},{"text":" to isolate test cases, as described in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/MockingStaticMembers","type":"reference"},{"text":" article.","type":"text"}]}]}],"metadata":{"modules":[{"name":"TestDRS"}],"role":"article","roleHeading":"Article","title":"Frequently Asked Questions"},"sections":[],"abstract":[{"type":"text","text":"Common questions and answers about using TestDRS."}],"kind":"article","hierarchy":{"paths":[["doc:\/\/TestDRS\/documentation\/TestDRS"]]},"references":{"doc://TestDRS/documentation/TestDRS":{"type":"topic","kind":"symbol","url":"\/documentation\/testdrs","abstract":[{"text":"A modern Swift testing library that provides powerful mocking, stubbing, and verification capabilities through Swift macros.","type":"text"}],"title":"TestDRS","role":"collection","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS"},"doc://TestDRS/documentation/TestDRS/ExpectWasCalledResult/getMatchingCall()":{"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"AmountMatching"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MatchingSingle"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult\/getMatchingCall()","kind":"symbol","url":"\/documentation\/testdrs\/expectwascalledresult\/getmatchingcall()","title":"getMatchingCall()","abstract":[{"text":"Gets the matching call if it exists, or throws an ","type":"text"},{"code":"ExpectWasCalledResultError","type":"codeVoice"},{"type":"text","text":" if no calls were made that match the expectation."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getMatchingCall","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7TestDRS12FunctionCallV","text":"FunctionCall","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://TestDRS/documentation/TestDRS/MockingStaticMembers":{"type":"topic","role":"article","abstract":[{"type":"text","text":"Learn how to test code that uses static members by creating mocks with TestDRS."}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/MockingStaticMembers","url":"\/documentation\/testdrs\/mockingstaticmembers","title":"Mocking static members","kind":"article"},"doc://TestDRS/documentation/TestDRS/ExpectWasCalledResult":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpectWasCalledResult"}],"url":"\/documentation\/testdrs\/expectwascalledresult","navigatorTitle":[{"text":"ExpectWasCalledResult","kind":"identifier"}],"identifier":"doc:\/\/TestDRS\/documentation\/TestDRS\/ExpectWasCalledResult","role":"symbol","abstract":[{"type":"codeVoice","code":"ExpectWasCalledResult"},{"text":" is a struct that encapsulates the result of an ","type":"text"},{"type":"codeVoice","code":"#expectWasCalled"},{"type":"text","text":" expectation."},{"type":"text","text":" "},{"type":"text","text":"It contains any calls that match the expectation and provides methods for expecting the number of times the given call was recorded."}],"type":"topic","title":"ExpectWasCalledResult","kind":"symbol"}}}